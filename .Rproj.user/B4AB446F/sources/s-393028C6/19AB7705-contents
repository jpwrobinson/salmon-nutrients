---
title: "Calcium model - full dataset, scaled"
output: html_notebook
---

```{r setup}
knitr::opts_knit$set(root.dir = normalizePath(".."))
```

```{r}
pacman::p_load(here, funk, knitr, rethinking, tidyverse, tidybayes, skimr)
theme_set(theme_sleek())
## load all data frames
load(file='data/clean/IHH_freshwater_traits.Rdata')
load(file = 'data/aaron_global_posteriors.Rdata')
nut='Calcium'
```

```{r}

focal<-tl %>% filter(nutrient == 'Calcium') %>%
		select(nutrient, value, id_number, paper_id, species, family,Order, 
					EnvTemp, demers_pelag, TL, Lmax, K, tm, BodyShapeI,
					source, form_clean, Habitat, pelagic, country_sampled,
					river_iron, soil_quality) %>%
    mutate(Lmax = log(Lmax), K = log(K), tm = log(tm))

apply(focal %>% select(demers_pelag:Habitat), 2, function(x){sum(is.na(x))})
skim(focal)
hist(focal$value)

## drop outliers
outlier.lims<-2*sd(focal$value) + mean(focal$value)
print(paste0('Dropping ', dim(focal[focal$value >= outlier.lims,])[1], ' large outliers'))
focal<-focal %>% filter(value <= outlier.lims)

# drop 5 fish with values < 0.02
focal<-focal %>% filter(value > 0.02)

print(paste0('Fitting model to ',dim(focal)[1], ' samples of ', uniques(focal$species), ' species'))
```

```{r}
## prepare data and y histogram

## standardize exp. covariates, mean = 0
focal.scaled<-scaler(focal, 
				ID = c('nutrient','value', 'source', 'form_clean', 
				       'species', 'family','Order','Habitat', 'country_sampled', 'id_number','paper_id','form_clean', 'EnvTemp', 'demers_pelag', 'pelagic')) 

## check cor between preds
pairs2(focal.scaled[,unlist(lapply(focal.scaled, is.numeric)) ], lower.panel=panel.cor, upper.panel=panel.smooth2)

print('Priors are:')
print(posts %>% filter(nut == nut) %>% select(nut,covariate, post, sd)) %>% mutate(post = round(post,3), sd = round(sd,3))

focal.scaled$logvalue<-log(focal.scaled$value)
focal.scaled$source<-as.factor(focal.scaled$source)
focal.scaled$paper_id<-as.factor(focal.scaled$paper_id)
focal.scaled$family<-as.factor(focal.scaled$family)
focal.scaled$Order<-as.factor(focal.scaled$Order)
focal.scaled$form_clean<-as.factor(focal.scaled$form_clean)
focal.scaled$EnvTemp<-as.factor(focal.scaled$EnvTemp)
focal.scaled$demers_pelag<-as.factor(focal.scaled$demers_pelag)
focal.scaled$BodyShapeI<-as.factor(focal.scaled$BodyShapeI)
focal.scaled$Habitat<-as.factor(focal.scaled$Habitat)

par(mfrow=c(1,2))
hist(focal.scaled$value, main = nut, xlab=paste(nut))
hist(focal.scaled$logvalue, main = nut, xlab=paste('log', nut))

# focal.scaled$habitat<-focal.scaled$demers_pelag
focal.fit<-focal.scaled %>% select(value, logvalue, TL, Lmax, K, tm, EnvTemp, BodyShapeI, pelagic, Habitat, soil_quality, river_iron, form_clean, Order, family, source, species, paper_id)
skim(focal.fit)
```

```{r}
# fit model

nt_m<-ulam(
        alist(
          # logvalue ~ dnorm(mu, sigma),
          value ~ dgamma2(mu, scale),
          # value ~ dlnorm(mu, sigma),
          ## 
          log(mu) <- a + 
              # continuous    
                B4_TL*TL +
                B5_PEL*pelagic +
                B6_LMX*Lmax +
                B8_K*K +
                B9_AM*tm + 
                B13_RIV*river_iron +
                B14_SOIL*soil_quality +
            
              # hierarchical
                B_ID[paper_id]*sigma_id +
                B0_ORD[Order]*sigma_ord +
                B15_FAM[family]*sigma_fam +
                B1_HAB[Habitat] +
                B2_TR[EnvTemp] +
                B7_BOD[BodyShapeI] +
          			B10_FOS[form_clean] + 
                B12_SEA[source]*sigma_source, 	
          
          ## priors
          a ~ dnorm(0, 1000),
          B_ID[paper_id] ~ dnorm(0, 1),
          B0_ORD[Order] ~ dnorm(0, 1),
          B1_HAB[Habitat] ~ dnorm(0, sigma_hab),
          B2_TR[EnvTemp] ~ dnorm(0, sigma_temp),
          B4_TL ~ dnorm(0, 1000),
          B5_PEL ~ dnorm(0, 1000),
    		  B6_LMX ~ dnorm(0, 1000),
    		  B7_BOD[BodyShapeI] ~ dnorm(0, sigma_bod),
    		  B8_K ~ dnorm(0, 1000),
    		  B9_AM ~ dnorm(0, 1000),
    		  B10_FOS[form_clean] ~ dnorm(0, sigma_form),
    		  B12_SEA[source]~ dnorm(0, 1),
    		  B13_RIV ~ dnorm(0, 1000),
    		  B14_SOIL ~ dnorm(0, 1000),
    		  B15_FAM[family] ~ dnorm(0, 1),
    		  
          c(sigma_id, sigma_ord, sigma_fam, sigma_hab, sigma_temp, sigma_bod, sigma_form, sigma_source, scale) ~ dexp(2)
        ),
        data=focal.fit, iter=5000, warmup=1500, chains=3, cores = 4, control=list(adapt_delta=0.99), constraints=list(a="lower=0"), log_lik = TRUE)

# load(paste0('results/',	 nut, '_scaled_uninformed', '.Rdata'))
# nt_m<-output[[1]]
```
#### Divergence

```{r}
d<-divergent(nt_m)
if(d == 0) print('BOOM BOOM NO DIVERGENT CHAINS') else
print(paste('STOP DIVERGENCE PROBLEM: ', d, ' chains'))
```



#### Convergence and posterior predictions 


```{r}
dashboard(nt_m)
```

```{r}
## check influential samples - Pareto distribution shape parameter k. Ideally < 0.5, can be up to 0.7 (Vehtari et al. 2017)
waic <- WAIC( nt_m, n=0, pointwise=TRUE)
loo <- LOO( nt_m, n=0, pointwise=TRUE)
focal[loo$k>0.5,]
hist(loo$k, main = print(paste('Pareto k:', dim(focal[loo$k>0.5,])[1], 'influential samples')))
abline(v = 0.5, col='red', lty=2); abline(v = 0.7, col='red', lty=1)
```

```{r}
precis(nt_m, 2)
```

```{r}
plot(nt_m, 1)
```

```{r}
funk::pairs2(extract.samples(nt_m)[-c(1:5, 9,12,13, 16:25)])
```

```{r}
plot(precis(nt_m, 2), xlab='estimate, 89 CIs', xlim=c(-5,5))
```
```{r}
traceplot(nt_m, pars=c('a','B4_TL', 'B5_PEL', 'B6_LMX', 'B8_K', 'B9_AM', 'B13_RIV', 'B14_SOIL'))
```

```{r}
# sample y from posterior
y_post<-sim(nt_m)
focal.fit$y_post<-apply(y_post, 2, mean)
ggplot(focal.fit, aes(y_post, value, col=Order)) + 
        geom_point() + 
        geom_abline(intercept=0, slope=1) +
        lims(y=c(min(focal.fit$value), max(focal.fit$value)),x=c(min(focal.fit$value), max(focal.fit$value))) +
        labs(x = 'Posterior mean', y = 'Observed', subtitle = nut)


```

```{r}
post<-extract.samples(nt_m)
mu <-post$a
ggplot(data.frame(x=(mu))) + 
            geom_density(aes(x), fill='grey') + 
            labs(x='log(mu)', title=paste(nut, 'posterior')) +       
            annotate("text",  x=Inf, y = Inf, label = paste0('median ', nut, ' = ', round(median(exp(mu)),2), ' mg/100g'), vjust=2, hjust=2) +
            geom_vline(xintercept=median((mu)), col='red')

```
```{r}
source('notebooks/SOURCE_species_postpred_plot.R')
```


```{r}
pred<-data.frame(species = (unique(focal.fit$species)),
						  source = (focal.fit$source)[1],
						  paper_id = (focal.fit$paper_id)[1],
              river_iron = 0, soil_quality = 0,
						  form_clean = (focal.fit$form_clean)[2])

pred$TL <-focal.fit$TL[match(pred$species, focal.fit$species)]
pred$Lmax <-focal.fit$Lmax[match(pred$species, focal.fit$species)]
pred$K <-focal.fit$K[match(pred$species, focal.fit$species)]
pred$tm <-focal.fit$tm[match(pred$species, focal.fit$species)]
pred$pelagic <-focal.fit$pelagic[match(pred$species,focal.fit$species)]
pred$Habitat <-factor(focal.fit$Habitat[match(pred$species,focal.fit$species)])
pred$EnvTemp <-factor(focal.fit$EnvTemp[match(pred$species,focal.fit$species)])
pred$BodyShapeI <-factor(focal.fit$BodyShapeI[match(pred$species,focal.fit$species)])
pred$Order <-factor(focal.fit$Order[match(pred$species, focal.fit$species)])
pred$family <-factor(focal.fit$family[match(pred$species, focal.fit$species)])

# replace varying intercept samples with zeros (SITE AND FAMILY)
# 1000 samples by 21 sites
a_source_zeros <- matrix(0,1000,uniques(focal.fit$source))
a_form_zeros <- matrix(0,1000,uniques(focal.fit$form_clean))
meds<-link(nt_m, data=pred, n=1000, replace=list(B12_SEA=a_source_zeros, B10_FOS = a_form_zeros))

pred$mu<-apply(meds, 2, median)
pred$lower95 <- apply( meds , 2 , HPDI , prob=0.95 )[1,]
pred$upper95 <- apply( meds , 2 , HPDI , prob=0.95 )[2,]
pred$lower50 <- apply( meds , 2 , HPDI , prob=0.50 )[1,]
pred$upper50 <- apply( meds , 2 , HPDI , prob=0.50 )[2,]
mast<-pred
# 
# 	## estimate average nutrient concentration irrespective of species
# 	base<-expand.grid(
# 						  # species = unique(nt_m$species)[2],
# 						  site = 'M1', 
# 						  family='Acanthuridae',
# 						  trophic_level = 0, 
# 						  Lmax = 0, 
# 						  K = 0, 
# 						  tm = 0, 
# 						  pelagic = 0)
# 	# replace varying intercept samples with zeros (SITE AND FAMILY)
# 	meds<-link(nt_m, data=base, n=1000, replace=list(X1=a_site_zeros, X2=a_family_zeros))
# 
# 	base$mu<-apply(meds, 2, median)
# 	base$lower95 <- apply( meds , 2 , HPDI , prob=0.95 )[1,]
# 	base$upper95 <- apply( meds , 2 , HPDI , prob=0.95 )[2,]
# 	base$nutrient<-nut
# 	
	## transform mu
    # mast$mu<-exp(mast$mu)
    # mast$lower95<-exp(mast$lower95); mast$upper95<-exp(mast$upper95)
    # mast$lower50<-exp(mast$lower50); mast$upper50<-exp(mast$upper50)
    # base$mu<-exp(base$mu)
    # base$lower95<-exp(base$lower95); base$upper95<-exp(base$upper95)

```

```{r}
## plot species posterior predictions

tl<-tl %>% filter(nutrient == 'Calcium')

## drop outliers
# outlier.lims<-tl %>% group_by(nutrient) %>% summarise(out = 2*sd(value) + mean(value))
# tl$lim<-outlier.lims$out[match(tl$nutrient, outlier.lims$nutrient)]
# tl<-tl %>% filter(value <= lim)
# # drop 5 fish with values < 0.02
# tl<-tl %>% filter(value > 0.02)

# short labels
mast$species_short<-droplevels(tl$species_short[match(mast$species, tl$species)])
mast$species<-factor(mast$species, levels=mast$species[order(mast$mu)])

g1<-ggplot(mast) +
	# geom_rect(data = base, aes(ymin = lower95, ymax = upper95, xmin = -Inf, xmax=Inf), fill='red', alpha=0.2) +
	# geom_hline(data = base, aes(yintercept=mu), col='red') +
	geom_pointrange(
		aes(y = mu, x = species, ymin = lower95, ymax = upper95)) +
	geom_point(aes(y = mu, x = species, col=Order), size=2) +
	labs(y = 'mg per 100g', x ='') +
	coord_flip() + 
  scale_x_discrete(labels=mast$species_short) +
	# guides(colour=FALSE) + 
	theme(axis.text.y=element_text(size=8, colour='black'),
		legend.position = 'top',
		legend.title = element_blank(),
			axis.text.x=element_text(size=10, colour='black'),
				axis.line = element_line(colour = "black"), 
				strip.text = element_text(face="bold", colour='black', size=10)) 

g2<-g1 + geom_jitter(data = tl, aes(species, value), alpha=0.25, width=0.15, size=0.75)

g1
pdf(file = paste0('figures/models/', nut, '_species_posteriors.pdf'), height=12, width=4)
g1
g2
dev.off()

```

```{r}
## save model output
## bind and save as Rdata	
output<-list(nt_m, post, focal, focal.fit)

save(output, file = paste0('results/',
	 nut, '_scaled_uninformed', '.Rdata'))
```

