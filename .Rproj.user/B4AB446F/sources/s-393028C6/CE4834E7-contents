---
title: "Calcium model - full dataset, scaled, phylogeny"
output: html_notebook
---

```{r setup}
knitr::opts_knit$set(root.dir = normalizePath("../.."))
```

```{r}
library(here)
library(funk)
library(knitr)
library(rethinking)
library(tidyverse); theme_set(theme_sleek())
library(tidybayes)

## load all data frames
source('scripts/cleaning/master_data_load.R')
load(file = 'data/aaron_global_posteriors_update.Rdata')
nut='Ca'
```

```{r}

focal<-stir %>% filter(nutrient == nut) %>%
		select(nutrient, value, fish_id, units, species, family, 
					mass_kg, Lmax_prop, trophic_level, Lmax, K, tm, Feeding_path, site) %>%
    mutate(Lmax = log(Lmax), K = log(K), Feeding_path = as.factor(Feeding_path))

## drop outliers
outlier.lims<-2*sd(focal$value) + mean(focal$value)
focal<-focal %>% filter(value <= outlier.lims)

## drop any species with fewer than 3 individuals
# subs<-aggregate(fish_id ~ species, focal, uniques)
# sp<-unique(subs$species[subs$fish_id > 2])
# focal<-focal %>% filter(species %in% sp) %>% droplevels()
print(paste0('Fitting model to ',dim(focal)[1], ' samples of ', uniques(focal$species), ' species'))
```

```{r}
## prepare data and y histogram

## standardize exp. covariates, mean = 0
focal<-scaler(focal, 
				ID = c('nutrient','value', 'fish_id', 'units', 'species', 'family', 'site'), cats=TRUE) 

## check cor between preds
pairs2(focal[,unlist(lapply(focal, is.numeric)) ], lower.panel=panel.cor, upper.panel=panel.smooth2)

print('Priors are:')
print(posts %>% filter(nut == nut) %>% select(nut,covariate, post, sd)) %>% mutate(post = round(post,3), sd = round(sd,3))

focal$logvalue<-log(focal$value)
focal$benthic_pelagic_dummy<-focal$benthic.pelagic.dummy
focal$site<-as.factor(focal$site)
focal$species<-as.factor(focal$species)

par(mfrow=c(1,2))
hist(focal$value, main = nut, xlab=paste(nut))
hist(focal$logvalue, main = nut, xlab=paste('log', nut))

focal.fit<-focal %>% select(logvalue, trophic_level, Lmax, K, tm, benthic_pelagic_dummy, site, species)
```

```{r}
## read phylogeny
phy<-read.csv('data/clean/mean_phy_dist.csv', row.names=1)
colnames(phy)<-str_replace_all(colnames(phy), '_', '\\ ')
rownames(phy)<-str_replace_all(rownames(phy), '_', '\\ ')
sp<-colnames(phy)

## filter to stir species
sp2<-c(as.character(unique(focal$species)))
# 
# 
phy<-phy[colnames(phy) %in% sp2]
phy<-phy[rownames(phy) %in% sp2,]
phy<-as.matrix(phy)

Dmat <- phy[ as.character(focal$species) , as.character(focal$species) ] / max(phy)
Dmat_sp <- phy[ sp2 , sp2 ] / max(phy)
```

```{r} 

## convert focal.fit to list
focal.list<-as.list(focal.fit)
focal.list$Dmat<-Dmat
focal.list$Dmat_sp<-Dmat_sp
focal.list$N_dat<-nrow(focal.fit)
focal.list$N_spp<-uniques(focal.fit$species)

# fit model

nt_m<-ulam(
        alist(
          logvalue ~ dnorm(mu, sigma),
          ## intercept is species level effects
          mu <- B3*trophic_level + B4*Lmax + 
          			B5*K + B6*tm + B7*benthic_pelagic_dummy +  # fixed
          			X1[site]*sigma_site +
                X_sp[species], #phylogeny
          
          ## priors
          X1[site] ~ dnorm(0, 1),
          vector[N_spp]:X_sp ~ multi_normal(0, SIGMA),
          matrix[N_spp, N_spp]: SIGMA <- cov_GPL1(Dmat_sp , etasq, rhosq, 0.01),# random
          
          ## priors
          # a ~ dnorm(8.212, 1.14),
          B3 ~ dnorm(-0.131, 0.237),
    		  B4 ~ dnorm(-1.014, 0.207),
    		  B5 ~ dnorm(-0.857, 0.480),
    		  B6 ~ dnorm(-0.065, 0.224),
    		  B7 ~ dnorm(-0.159, 0.253),
          c(sigma, sigma_site) ~ dexp(2),
    		  etasq ~ half_normal(1, 0.25),
          rhosq ~ half_normal(3, 0.25)
        ),
        data=focal.list, iter=5000, warmup=1500, chains=3, cores = 6, log_lik = TRUE, control=list(adapt_delta=0.99))

# load(paste0('results/final/',	 nut, '_phylo_scaled', '.Rdata'))
# nt_m<-output[[1]]
```
#### Divergence

```{r}
d<-divergent(nt_m)
if(d == 0) print('BOOM BOOM NO DIVERGENT CHAINS') else
print(paste('STOP DIVERGENCE PROBLEM: ', d, ' chains'))
```



#### Convergence and posterior predictions 


```{r}
dashboard(nt_m)
```


```{r}
precis(nt_m, 2)
```

```{r}
plot(nt_m, 1)
```

```{r}
funk::pairs2(extract.samples(nt_m)[c(3:8)])
```

```{r}
plot(precis(nt_m, 2), xlab='estimate, 89 CIs')
```
```{r}
traceplot(nt_m, pars=c('B3', 'B4', 'B5', 'B6', 'B7'))
```

```{r}
# sample y from posterior
y_post<-sim(nt_m)
focal$y_post<-apply(y_post, 2, mean)
ggplot(focal, aes(y_post, logvalue)) + 
        geom_point() + 
        geom_abline(intercept=0, slope=1) +
        lims(y=c(min(focal$logvalue), max(focal$logvalue)),x=c(min(focal$logvalue), max(focal$logvalue))) +
        labs(x = 'Posterior mean', y = 'Observed', subtitle = nut)
```


```{r}
## save model output
# save posterior preds
post<-as.data.frame(extract.samples(nt_m)) %>% gather(param, dist) %>% 
		filter(param %in% c('B3', 'B4', 'B5', 'B6', 'B7')) %>% mutate(nutrient = nut)

## bind and save as Rdata	
output<-list(nt_m, post, focal, focal.list)


save(output, file = paste0('results/final/',
	 nut, '_phylo_scaled', '.Rdata'))
```

